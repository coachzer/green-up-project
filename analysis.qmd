---
title: "Analysis"
author: "Nikola Kovačević"
date: "07/08/2024"
format: html
editor: source
---

# Introduction

Conducting further analysis on the cleaned up data from the green-up-project.qmd file.

## Regions

current focus

## Companies

- after 2019 not included in the SURS data

per region, per company
number of companies
type of waste per companies, how many different types
node = a company in a region, point on a map
cant just focus on headquarters (HQ) of the node
try to figure out connection between operator, collector and storage
descriptive statistics for all years

# Setup

```{r setup, message = FALSE, warning = FALSE}

# Load required libraries
library(tidyverse)
library(scales)
library(viridis)
library(ggplot2)
library(plotly)
library(htmlwidgets)
library(reshape2)

```

# Functions

```{r functions}

# Function to assign clear names to waste types
clear_waste_name <- function(name) {
  case_when(
    # Sawdust, chips, cuttings, wood, particle board and veneer, not specified in 03 01 04
    name == "Sawdust/Chips/Wood, not specified in 03 01 04" ~ "Sawdust and Wood Cuttings",
    name == "Paper and cardboard packaging and cardboard packaging" ~ "Paper and Cardboard Packaging",
    name == "Wooden packaging" ~ "Wooden Packaging",
    name == "Wood" ~ "Wood",
    name == "Wood, not specified in 20 01 37" ~ "Other Wood Waste",
    name == "Waste bark and cork" ~ "Bark and Cork",
    name == "Waste not specified elsewhere" ~ "Unspecified Wood Waste",
    TRUE ~ name
  )
}

# summarize waste stored at the start and at the end of the year per region and waste type, define a function, keep the year column
summarize_waste_storage <- function(data) {
  data |> 
    group_by(statistical_region, type_of_waste) |> 
    summarize(total_stored_start = sum(waste_stored_start_year, na.rm = TRUE) / 1000,
              total_stored_end = sum(waste_stored_end_year, na.rm = TRUE) / 1000) |> 
    ungroup()
}

```


# Generation Data Analysis Process
## Data Loading and Preparation

Data from 2018 to 2022 was loaded from separate CSV files for each year.
The 2018 data required special handling due to its different structure:

Two separate files were used: waste_generation_18.csv and waste_management_18.csv.
These files were joined based on common columns (region, company, and waste type).


## Data Standardization

Column names were standardized across all years to ensure consistency.
A 'year' column was added to the 2018 data to match the structure of other years.

## Data Transformation

### For 2018 data:

The 'delivered_to' column was transformed into separate columns for different types of waste transfer.
A 'total_waste_stored' column was created by summing 'waste_stored_start_year' and 'waste_generated'.


### For all years:

The 'clear_waste_name' function was applied to standardize waste type names.


## Data Combination

Data from 2019 to 2022 was combined using bind_rows().
The processed 2018 data was then appended to this combined dataset.

## Analysis and Visualization

Total waste generation by year was calculated and visualized.
Waste generation was analyzed by region and year.
Waste generation was analyzed by waste type and year.
Waste transferred for treatment and waste stored at the end of the year were analyzed separately.

## Key Data Transformations

Grouping: Data was frequently grouped by year, region, or waste type to allow for aggregate analysis.
Sum and Summarize: Within groups, waste quantities were summed to get total amounts.
Unit Conversion: Waste amounts were often divided by 1000 to convert from kilograms to tons.

## Visualization Techniques

Line plots were used to show trends over time.
Interactive plots were created using ggplotly() for more detailed exploration.

### Code

```{r generation_combined_data}

g.2022.data <- read_csv("2022 data/2022 filtered/generation/generation_22.csv")
g.2021.data <- read_csv("2021 data/2021 filtered/generation/generation_21.csv")
g.2020.data <- read_csv("2020 data/2020 filtered/generation/generation_20.csv")
g.2019.data <- read_csv("2019 data/2019 filtered/generation/generation_19.csv")
g.2018.data.1 <- read_csv("2018 data/2018 filtered/generation/waste_generation_18.csv")
g.2018.data.2 <- read_csv("2018 data/2018 filtered/generation/waste_management_18.csv")

colnames(g.2018.data.2)

g.2018.data.1 <- g.2018.data.1 |> 
  group_by(statistical_region, name_of_company, type_of_waste, waste_stored_start_year, waste_stored_end_year) |>
  summarize(waste_generated = sum(waste_generated, na.rm = TRUE)) |>
  ungroup() |> 
  # order columns
  select(statistical_region, name_of_company, type_of_waste, waste_stored_start_year, waste_generated, waste_stored_end_year)

# Combine rows with the same region, company, waste type and processing type
g.2018.data.2 <- g.2018.data.2 |>
  group_by(statistical_region, name_of_company, delivered_to, type_of_waste) |>
  summarize(total_waste_given_away = sum(total_waste_given_away, na.rm = TRUE)) |>
  ungroup() 

# combine g.2018.data.1 and g.2018.data.2 based on the region and company
g.2018.data <- g.2018.data.1 |>
  left_join(g.2018.data.2, by = c("statistical_region" = "statistical_region", "name_of_company" = "name_of_company", "type_of_waste" = "type_of_waste"))

# add year column to 2018 data
g.2018.data <- g.2018.data |>
  mutate(year = 2018)

g.2018.data$delivered_to |> unique()

# instead of having the column delivered_to, we need to create separate columns for each type of waste transfer
g.2018.data <- g.2018.data |>
  mutate(
    waste_handed_to_others_RS = ifelse(delivered_to == "processing operator in RS", total_waste_given_away, 0),
    waste_sent_to_EU = 
      ifelse(delivered_to == "other EU country", total_waste_given_away, 0),
    waste_treated_by_producer = 
      ifelse(delivered_to == "processed the waste themselves", total_waste_given_away, 0)) |>
  select(-delivered_to, -total_waste_given_away)

# create a total waste stored column for 2018 data
g.2018.data <- g.2018.data |>
  mutate(total_waste_stored = waste_stored_start_year + waste_generated) |> 
  select(year, statistical_region, name_of_company, type_of_waste, total_waste_stored, waste_stored_start_year, waste_generated, waste_stored_end_year, waste_treated_by_producer, waste_handed_to_others_RS, waste_sent_to_EU)

names(g.2020.data) <- colnames(g.2022.data)
names(g.2019.data) <- colnames(g.2022.data)

combined_data <- bind_rows(g.2019.data, g.2020.data, g.2021.data, g.2022.data)

combined_data <- combined_data |> select(-waste_code, -waste_sent_for_treatment_outside_EU)

g.2018.data <- g.2018.data |> select(-name_of_company)

names(g.2018.data) <- colnames(combined_data)

combined_data <- bind_rows(combined_data, g.2018.data)

# apply clear_waste_name
combined_data <- combined_data |>
  mutate(type_of_waste = clear_waste_name(type_of_waste))

# Summarize total waste generation by year
total_waste_by_year <- combined_data |>
  group_by(year) |>
  summarize(total_generated_waste = sum(generated_in_the_year, na.rm = TRUE) / 1000)

# Plot total waste generation by year
t <- ggplot(total_waste_by_year, aes(x = year, y = total_generated_waste)) +
  geom_line(group = 1) +
  geom_point() +
  labs(
    title = "Total Wood Waste Generation by Year",
    x = "Year",
    y = "Total Generated Waste (tons)"
  ) +
  theme_minimal()

t

waste_by_region_year <- combined_data |>
  group_by(statistical_region, year) |>
  summarize(total_generated_waste = sum(generated_in_the_year, na.rm = TRUE) / 1000) |>
  ungroup()

# Plot total waste generation by region and year
t2 <- ggplot(waste_by_region_year, aes(x = year, y = total_generated_waste, color = statistical_region)) +
  geom_line() +
  geom_point() +
  labs(
    title = "Total Wood Waste Generation by Region and Year",
    x = "Year",
    y = "Total Generated Waste (tons)"
  ) +
  theme_minimal()

t2

ggplotly(t2, width = 800, height = 500)

waste_by_type_year <- combined_data |>
  group_by(type_of_waste, year) |>
  summarize(total_generated_waste = sum(generated_in_the_year, na.rm = TRUE) / 1000) |>
  ungroup()

# Plot total waste generation by type and year
t3 <- ggplot(waste_by_type_year, aes(x = year, y = total_generated_waste, color = type_of_waste)) +
  geom_line() +
  geom_point() +
  labs(
    title = "Total Wood Waste Generation by Type and Year",
    x = "Year",
    y = "Total Generated Waste (tons)"
  ) +
  theme_minimal()

ggplotly(t3, width = 800, height = 500)

# waste transferred for treatment
waste_transferred <- combined_data |>
  group_by(year) |>
  summarize(total_sent = sum(waste_transferred_for_treatment_in_RS, na.rm = TRUE) / 1000)

# Plot total waste transferred for treatment by year
t4 <- ggplot(waste_transferred, aes(x = year, y = total_sent)) +
  geom_line(group = 1) +
  geom_point() +
  labs(
    title = "Total Wood Waste Transferred for Treatment by Year",
    x = "Year",
    y = "Total Waste Transferred (tons)"
  ) +
  theme_minimal()

t4

# Plot waste stored at the end of the year
waste_stored_at_the_end_year <- combined_data |>
  group_by(year) |>
  summarize(total_stored = sum(temporarily_stored_end_year, na.rm = TRUE) / 1000) 

t5 <- ggplot(waste_stored_at_the_end_year, aes(x = year, y = total_stored)) +
  geom_line(group = 1) +
  geom_point() +
  labs(
    title = "Total Wood Waste Stored at the End of the Year",
    x = "Year",
    y = "Total Waste Stored (tons)"
  ) +
  theme_minimal()

t5
```

# Collection Data Analysis Process

### Code

#### Waste Storage

```{r collection_combined_data_waste_storage}
waste.storage.2022.data <- read_csv("2022 data/2022 filtered/collection/waste_storage_22.csv")
waste.storage.2021.data <- read_csv("2021 data/2021 filtered/collection/waste_storage_21.csv")
waste.storage.2020.data <- read_csv("2020 data/2020 filtered/collection/waste_storage_20.csv")
waste.storage.2019.data <- read_csv("2019 data/2019 filtered/collection/waste_storage_19.csv")
waste.storage.2018.data <- read_csv("2018 data/2018 filtered/collection/waste_storage_18.csv")

waste.storage.2019.data <- waste.storage.2019.data |>
  dplyr::select(name_of_company, statistical_region, waste_code, type_of_waste, waste_stored_start_year, waste_stored_end_year)

waste.storage.2018.data <- waste.storage.2018.data |> 
  select(statistical_region, name_of_company, type_of_waste, waste_stored_start_year, waste_stored_end_year) |> 
  mutate(type_of_waste = clear_waste_name(type_of_waste))

waste.storage.2019.data <- waste.storage.2019.data |> 
  select(statistical_region, name_of_company, type_of_waste, waste_stored_start_year, waste_stored_end_year) |> 
  mutate(type_of_waste = clear_waste_name(type_of_waste))

waste.storage.2020.data <- waste.storage.2020.data |>
  mutate(type_of_waste = clear_waste_name(type_of_waste))

waste.storage.2021.data <- waste.storage.2021.data |> 
  select(year, statistical_region, type_of_waste, previous_stored_start_year, previous_stored_end_year) |>
  rename(
    waste_stored_start_year = previous_stored_start_year,  
    waste_stored_end_year = previous_stored_end_year) |> 
  mutate(type_of_waste = clear_waste_name(type_of_waste))

waste.storage.2022.data <- waste.storage.2022.data |>
  select(year, statistical_region, type_of_waste, previous_stored_start_year, previous_stored_end_year) |>
  rename(
    waste_stored_start_year = previous_stored_start_year,  
    waste_stored_end_year = previous_stored_end_year) |>
  mutate(type_of_waste = clear_waste_name(type_of_waste))

waste.storage.2018.data <- summarize_waste_storage(waste.storage.2018.data)
waste.storage.2019.data <- summarize_waste_storage(waste.storage.2019.data)
waste.storage.2020.data <- summarize_waste_storage(waste.storage.2020.data)
waste.storage.2021.data <- summarize_waste_storage(waste.storage.2021.data)
waste.storage.2022.data <- summarize_waste_storage(waste.storage.2022.data)

waste.storage.2018.data$year <- 2018
waste.storage.2019.data$year <- 2019
waste.storage.2020.data$year <- 2020
waste.storage.2021.data$year <- 2021
waste.storage.2022.data$year <- 2022

combined_storage_data <- bind_rows(waste.storage.2018.data, waste.storage.2019.data, waste.storage.2020.data, waste.storage.2021.data, waste.storage.2022.data)

# Reshape data for plotting
df_long <- melt(combined_storage_data, id.vars = c("statistical_region", "type_of_waste", "year"),
                          measure.vars = c("total_stored_start", "total_stored_end"),
                          variable.name = "storage_time", value.name = "total_storage")

# Grouped bar plot
t6 <- ggplot(df_long, aes(x = statistical_region, y = total_storage, fill = storage_time)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Waste Storage at Start and End of the Year",
       x = "Statistical Region", y = "Total Stored Waste") +
  scale_fill_manual(values = c("total_stored_start" = "blue", "total_stored_end" = "red"),
                    labels = c("Start of Year", "End of Year")) +
  coord_flip() +
  theme_minimal()

ggplotly(t6, width = 800, height = 500)

yearly_data <- combined_storage_data |>
  group_by(year) |>
  summarize(total_start = sum(total_stored_start, na.rm = TRUE),
            total_end = sum(total_stored_end, na.rm = TRUE))

t7 <- ggplot(yearly_data, aes(x = year)) +
  geom_line(aes(y = total_start, color = "Start of Year")) +
  geom_line(aes(y = total_end, color = "End of Year")) +
  labs(title = "Total Stored Waste Over Time",
       y = "Total Stored Waste",
       color = "Time of Year") +
  theme_minimal()

ggplotly(t7, width = 800, height = 500)

```

#### Waste Received

```{r collection_combined_data_waste_received}

waste.received.2018.data <- read_csv("2018 data/2018 filtered/collection/waste_collected_18.csv")
waste.received.2019.data <- read_csv("2019 data/2019 filtered/collection/waste_collected_19.csv")
waste.received.2020.data <- read_csv("2020 data/2020 filtered/collection/waste_received_20.csv")
waste.received.2021.data <- read_csv("2021 data/2021 filtered/collection/waste_received_21.csv")
waste.received.2022.data <- read_csv("2022 data/2022 filtered/collection/waste_received_22.csv")

colnames(waste.received.2020.data) <- names(waste.received.2022.data)

# 2018 Data ----

waste.received.2018.data <- waste.received.2018.data |> 
  group_by(statistical_region, type_of_waste, collected_from) |>
  summarize(
    total_waste_received = sum(total_waste_collected, na.rm = TRUE) / 1000,
    waste_from_producers_no_record = sum(waste_from_producers_no_record, na.rm = TRUE) / 1000,
    waste_from_producers_with_record = sum(waste_from_producers_with_record, na.rm = TRUE) / 1000,
    waste_from_collectors_RS = sum(waste_from_collectors_RS, na.rm = TRUE) / 1000,
    waste_from_processors_RS = sum(waste_from_processors_RS, na.rm = TRUE) / 1000) |>
  ungroup() |> 
  mutate(year = 2018) |> 
  select(year, statistical_region, type_of_waste, total_waste_received, waste_from_producers_no_record, waste_from_producers_with_record, waste_from_collectors_RS, waste_from_processors_RS)

waste.received.2018.data <- waste.received.2018.data |> 
  mutate(type_of_waste = clear_waste_name(type_of_waste))

# 2019 Data ----

waste.received.2019.data <- waste.received.2019.data |> 
  group_by(statistical_region, type_of_waste, gathered_from) |>
  summarize(
    total_waste_received = sum(waste_received, na.rm = TRUE) / 1000,
    waste_from_producers_no_record = sum(waste_from_producers_no_record, na.rm = TRUE) / 1000,
    waste_from_producers_with_record = sum(waste_from_producers_with_record, na.rm = TRUE) / 1000,
    waste_from_collectors_RS = sum(waste_from_collectors_RS, na.rm = TRUE) / 1000,
    waste_from_processors_RS = sum(waste_from_processors_RS, na.rm = TRUE) / 1000) |>
  ungroup() |>
  mutate(year = 2019) |> 
  select(year, statistical_region, type_of_waste, total_waste_received, waste_from_producers_no_record, waste_from_producers_with_record, waste_from_collectors_RS, waste_from_processors_RS)

waste.received.2019.data <- waste.received.2019.data |> 
  mutate(type_of_waste = clear_waste_name(type_of_waste))

# 2020 Data ----   

waste.received.2020.data <- waste.received.2020.data |> 
  mutate(type_of_waste = clear_waste_name(type_of_waste),
         total_waste_received = (waste_from_producers_no_record + 
                                   waste_from_producers_with_record + 
                                   waste_from_collectors_RS + 
                                   waste_from_processors_RS) / 1000,
         waste_from_producers_no_record = waste_from_producers_no_record / 1000,
         waste_from_producers_with_record = waste_from_producers_with_record / 1000,
         waste_from_collectors_RS = waste_from_collectors_RS / 1000,
         waste_from_processors_RS = waste_from_processors_RS / 1000) |> 
  select(year, statistical_region, type_of_waste, total_waste_received, waste_from_producers_no_record, waste_from_producers_with_record, waste_from_collectors_RS, waste_from_processors_RS)

# 2021 Data ----

waste.received.2021.data <- waste.received.2021.data |> 
  mutate(type_of_waste = clear_waste_name(type_of_waste),
         total_waste_received = (waste_from_producers_no_record + 
                                   waste_from_producers_with_record + 
                                   waste_from_collectors_RS + 
                                   waste_from_processors_RS) / 1000,
         waste_from_producers_no_record = waste_from_producers_no_record / 1000,
         waste_from_producers_with_record = waste_from_producers_with_record / 1000,
         waste_from_collectors_RS = waste_from_collectors_RS / 1000,
         waste_from_processors_RS = waste_from_processors_RS / 1000) |> 
  select(year, statistical_region, type_of_waste, total_waste_received, waste_from_producers_no_record, waste_from_producers_with_record, waste_from_collectors_RS, waste_from_processors_RS)

# 2022 Data ----

waste.received.2022.data <- waste.received.2022.data |> 
  mutate(type_of_waste = clear_waste_name(type_of_waste),
         total_waste_received = (waste_from_producers_no_record + 
                                   waste_from_producers_with_record + 
                                   waste_from_collectors_RS + 
                                   waste_from_processors_RS) / 1000,
         waste_from_producers_no_record = waste_from_producers_no_record / 1000,
         waste_from_producers_with_record = waste_from_producers_with_record / 1000,
         waste_from_collectors_RS = waste_from_collectors_RS / 1000,
         waste_from_processors_RS = waste_from_processors_RS / 1000) |> 
  select(year, statistical_region, type_of_waste, total_waste_received, waste_from_producers_no_record, waste_from_producers_with_record, waste_from_collectors_RS, waste_from_processors_RS)

# Combine data
combined_received_data <- bind_rows(waste.received.2018.data, waste.received.2019.data, waste.received.2020.data, waste.received.2021.data, waste.received.2022.data)

# Reshape data for plotting
df_long_received <- melt(combined_received_data, id.vars = c("statistical_region", "type_of_waste", "year"),
                          measure.vars = c("total_waste_received", "waste_from_producers_no_record", "waste_from_producers_with_record", "waste_from_collectors_RS", "waste_from_processors_RS"),
                          variable.name = "source", value.name = "total_received")

# Grouped bar plot
t8 <- ggplot(df_long_received, aes(x = statistical_region, y = total_received, fill = source)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Waste Received by Source",
       x = "Statistical Region", y = "Total Received Waste") +
  scale_fill_manual(values = c("total_waste_received" = "blue", "waste_from_producers_no_record" = "red", "waste_from_producers_with_record" = "green", "waste_from_collectors_RS" = "purple", "waste_from_processors_RS" = "orange"),
                    labels = c("Total Received", "From Producers (No Record)", "From Producers (With Record)", "From Collectors (RS)", "From Processors (RS)")) +
  coord_flip() +
  theme_minimal()

ggplotly(t8, width = 800, height = 500)

# Year plot
yearly_data_received <- combined_received_data |>
  group_by(year) |>
  summarize(total_received = sum(total_waste_received, na.rm = TRUE),
            from_producers_no_record = sum(waste_from_producers_no_record, na.rm = TRUE),
            from_producers_with_record = sum(waste_from_producers_with_record, na.rm = TRUE),
            from_collectors_RS = sum(waste_from_collectors_RS, na.rm = TRUE),
            from_processors_RS = sum(waste_from_processors_RS, na.rm = TRUE))

# Line and point
t9 <- ggplot(yearly_data_received, aes(x = year)) +
  geom_line(aes(y = total_received, color = "Total Received")) +
  geom_line(aes(y = from_producers_no_record, color = "From Producers (No Record)")) +
  geom_line(aes(y = from_producers_with_record, color = "From Producers (With Record)")) +
  geom_line(aes(y = from_collectors_RS, color = "From Collectors (RS)")) +
  geom_line(aes(y = from_processors_RS, color = "From Processors (RS)")) +
  labs(title = "Total Waste Received by Source Over Time",
       y = "Total Waste Received",
       color = "Source") +
  theme_minimal()

ggplotly(t9, width = 800, height = 500)

```

# Treatment Data Analysis Process

### Code 

```{r treatment_combined_data}

```