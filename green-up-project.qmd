---
title: "Green UP Project - Waste Data"
author: "Nikola Kovačević"
date: "15/11/2023"
format: html
editor: visual
---

## Short description of the project

Studying available statistical data in Slovenia for companies producing specific waste types, as well as, companies responsible for the uptake of this waste.

## Structure

The structure of various years seems to be very different in some cases, so the first task would actually be to make sense of all of this and actually see [what's the difference in available data between the various years]{.underline}.\

In theory, there are datasets for each year: [generated waste]{.underline}, [collected waste]{.underline} and for [how waste is used]{.underline}. Moreover, in some datasets, this is actually broken down by companies.

## Setup

```{r setup}
library(tidyverse)
library(gt)
library(gtExtras)
library(readxl)
library(ggplot2)
library(purrr)

codes <- c("15 01 03", "15 01 01", "17 02 01", "20 01 38", "20 01 37")

# currently in the same column -> "Odpadki na vhodu v obdelavo in prevzeti neobdelani odpadki številka", "Odpadki na izhodu iz postopka obdelave in oddani neobdelani odpadki številka",

columns_to_rename <- c("Številka odpadka", "Odpadki na vhodu v obdelavo številka", "Odpadek na vhodu v postopek obdelave številka")

```

## Functions

```{r functions}

# Function to read and process a sheet
process_sheet <- function(path, sheet_index, n_max = 2) {
  # Read the header rows
  header <- read_excel(path, skip = 7, sheet = sheet_index, col_names = FALSE, n_max = n_max)
  
  # Determine the number of header rows
  num_header_rows <- nrow(header)
  
  # Check for valid number of header rows
  if (num_header_rows == 2) {
    
    # Combine the header rows into one
    combined_header <- map2_chr(header[1, ], 
                                header[2, ],
                                ~ ifelse(!is.na(.y), paste(.x, .y), as.character(.x)))
    
  } else if (num_header_rows == 3) {
    
    # Find indices where NA occurs
    na_indices <- which(is.na(header[1, ]))
    
    # Iterate over each NA index and replace with the last non-NA value
    for (i in na_indices) {
      header[1, i] <- tail(header[1, 1:i][!is.na(header[1, 1:i])], 1)
    }

    combined_header <- map2_chr(header[1, ], 
                                header[2, ], 
                                ~ ifelse(!is.na(.y), paste(.x, .y), as.character(.x)))
    
    combined_header <- map2_chr(combined_header,
                                header[3, ], 
                                ~ ifelse(!is.na(.y), paste(.x, .y), as.character(.x)))
    
  
  } else if (num_header_rows == 4) {
    
    # Find indices where NA occurs
    na_indices <- which(is.na(header[1, ]))
    
    # Iterate over each NA index and replace with the last non-NA value
    for (i in na_indices) {
      header[1, i] <- tail(header[1, 1:i][!is.na(header[1, 1:i])], 1)
    }

    combined_header <- map2_chr(header[1, ], 
                                header[2, ], 
                                ~ ifelse(!is.na(.y), paste(.x, .y), as.character(.x)))
    
    combined_header <- map2_chr(combined_header,
                                header[3, ], 
                                ~ ifelse(!is.na(.y), paste(.x, .y), as.character(.x)))
    
    combined_header <- map2_chr(combined_header,
                                header[4, ], 
                                ~ ifelse(!is.na(.y), paste(.x, .y), as.character(.x)))
  }else {
    
    stop("Unexpected number of header rows. Only 2, 3 or 4 header rows are supported.")
    
  }
  
  # Read the sheet data
  sheet_data <- read_excel(path, skip = 7 + num_header_rows, sheet = sheet_index, col_names = FALSE)
  
  # Set the new column names
  colnames(sheet_data) <- combined_header
  
  return(sheet_data)
}

filter_df_by_codes <- function(df) {
  # Replace NA values with 0 in numeric columns
  numeric_columns <- sapply(df, is.numeric)
  df[, numeric_columns][is.na(df[, numeric_columns])] <- 0
  
  # df <- df %>% select_if(~ !any(is.na(.)))
  
  # character_columns <- sapply(df, is.character)
  # df[, character_columns][is.na(df[, character_columns])] <- "ne"
  
  # Check if any columns from the given exist and rename accordingly
  if (any(columns_to_rename %in% colnames(df))) {
    
    df <- df |> 
      rename_with(~ ifelse(. %in% columns_to_rename, "waste_code", .), 
                  cols = columns_to_rename) |> 
      filter(waste_code %in% 
               codes |
               grepl("^03 01 [0-9]", waste_code, perl = TRUE) &
               !grepl("03 01 04", waste_code, perl = TRUE)
      )
  }
  
  if (any(c("Odpadki na vhodu v obdelavo in prevzeti neobdelani odpadki številka", "Odpadki na izhodu iz postopka obdelave in oddani neobdelani odpadki številka") %in% colnames(df))) {
    df <- df |> 
      rename(treatment_input_waste_received_code = `Odpadki na vhodu v obdelavo in prevzeti neobdelani odpadki številka`,
             treatment_outlet_delivered_waste_code = `Odpadki na izhodu iz postopka obdelave in oddani neobdelani odpadki številka`)
    
    df <- df |> 
      filter(treatment_input_waste_received_code %in% 
               codes |
               grepl("^03 01 [0-9]", treatment_input_waste_received_code, perl = TRUE) &
               !grepl("03 01 04", treatment_input_waste_received_code, perl = TRUE)
      )
    
    df <- df |> 
      filter(treatment_outlet_delivered_waste_code %in% 
               codes |
               grepl("^03 01 [0-9]", treatment_outlet_delivered_waste_code, perl = TRUE) &
               !grepl("03 01 04", treatment_outlet_delivered_waste_code, perl = TRUE)
      )
  }
  
  # if there is a need to drop specific column
  
  # column_name <- "Odpadne nagrobne sveče (da/ne)"
  # 
  # if (column_name %in% colnames(df)) {
  #   df <- df |> 
  #     select(-column_name)
  # }
  
  return(df)
}
```

## Initial questions

We would like to see:

-   who are the companies that produce wood waste \> 2019

    -   assume number of companies for recent years 2021 to 2019
    -   take account covid years

    at what location (or municipality) the waste is produced

-   who are the companies that collect and process this

-   (potentially) see how actually the waste is processed and used

We would like to filter by actual codes for the waste:

-   03 01 ?? (anything that is in this category, except for 03 01 04\* )
-   15 01 03 lesena embalaza (wooden packaging)
-   15 01 01 papirna embalaza (paper packaging)
-   17 02 01 Les (construction waste)
-   20 01 38 Les, ki ni naveden pod (wood not specified under)
-   20 01 37 Les, ki vsebuje nevarne snovi (wood containing hazardous substances)

### Update 18/12/2023

-   compare by years \
    imporant info \
    by company/region

-   at least get some companies for the map

-   stick for 12 regions for now \
    get a center point per region

-   one producer and handler \
    try to connect the points between those two \
    where to ship, where to store

-   how much was recycled \
    flow/material balance checks out in the end \
    startyear - generated + stored = should equal to 0 \
    see for regions to municipalities

# Year 2022

## Data from the 2022 annual reports of the original emitters

```{r waste_generation}

# Specify the path to the Excel file
waste_generation_22.path <- "2022 data\\podatki LP ODP-nastajanje 2022.xlsx"

# Get the sheet names
sheet_names <- excel_sheets(waste_generation_22.path)

# Initialize a list to store processed sheets
processed_sheets <- list()

# Define the sheets where n_max should be 3 (replace with actual sheet indices)
# if needed
sheets_with_n_max_3 <- c(2, 3, 5)

# Loop through each sheet
for (sheet_name in sheet_names) {
  sheet_index <- match(sheet_name, sheet_names)
  n_max <- if (sheet_index %in% sheets_with_n_max_3) 3 else 2
  processed_sheet <- process_sheet(waste_generation_22.path, sheet_index, n_max)
  processed_sheets[[sheet_name]] <- processed_sheet
}

# Applying the function to each data frame in processed_sheets
processed_sheets <- lapply(processed_sheets, filter_df_by_codes)

generation.22 <- processed_sheets[[1]]
```

# Year 2021

## Original Emitters

Contains only one sheet.

Columns (translated to English):

-   \[1\] "Year"\
    \[2\] "Report"\
    \[3\] "Statistical region of waste generation"\
    \[4\] "Waste number"\
    \[5\] "Waste name"\
    \[6\] 'Total waste: generated and stored (in kilograms)'\
    \[7\] "Waste in temporary storage on 1.1.2021 (in kilograms)"\
    \[8\] "Waste generated in 2021 (in kilograms)"\
    \[9\] "Waste in temporary storage on 31.12.2021 (in kilograms)"\
    \[10\] "Waste treated by the original generator (in kilograms)"\
    \[11\] "Waste delivered for further management to other persons in the Republic of Slovenia (in kilograms)"\
    \[12\] "Waste sent for treatment to other EU Member States (in kilograms)"\
    \[13\] "Waste sent for treatment to non-EU countries (in kilograms)"

```{r original_emitters}

# generated waste

# Reminder: 
# Data are based on the ODP-Settlement Reports submitted for 2021. 
# The quantities of waste generated are not in all cases equal to the quantities of waste sent for further management (storage, collectors, waste treatment operators, export).

# oe2021 original emitters
# original emitters (ODP-sequestration) - poročil izvirnih povzročiteljev

# Specify the path to the Excel file
waste_generation_21.path <- "2021 data\\podatki LP ODP-nastajanje 2021.xlsx"

# Get the sheet names
sheet_names <- excel_sheets(waste_generation_21.path)

# Initialize a list to store processed sheets
processed_sheets <- list()

# Define the sheets where n_max should be 3 (replace with actual sheet indices)
# if needed
sheets_with_n_max_3 <- c(2, 3, 5)

# Loop through each sheet
for (sheet_name in sheet_names) {
  sheet_index <- match(sheet_name, sheet_names)
  n_max <- if (sheet_index %in% sheets_with_n_max_3) 3 else 2
  processed_sheet <- process_sheet(waste_generation_21.path, sheet_index, n_max)
  processed_sheets[[sheet_name]] <- processed_sheet
}

# Applying the function to each data frame in processed_sheets
processed_sheets <- lapply(processed_sheets, filter_df_by_codes)

generation.22 <- processed_sheets[[1]]

# oe2021.file_path <- "2021 data\\podatki LP ODP-nastajanje 2021.xlsx"
# 
# header <- read_excel(oe2021.file_path, skip = 7, sheet = 1, col_names = F, n_max = 2)
# 
# oe2021 <- read_excel(oe2021.file_path, skip = 9, sheet = 1, col_names = F)

# # Combine the two header rows into one
# header_row <- header[1, ] # This holds the first part of the header
# sub_header_row <- header[2, ] # This holds the second part of the header
# 
# # Combine the two parts of the header
# new_header <- map2_chr(header_row, 
#                        sub_header_row, 
#                        ~if(!is.na(.y)) paste(.x, .y) else as.character(.x))
# 
# colnames(oe2021) <- new_header
# 
# oe2021 <- oe2021 |>
#   rename(waste_code = `Številka odpadka`) |> 
#   filter(
#     waste_code %in% c("15 01 03", "15 01 01", "17 02 01", "20 01 38", "20 01 37")  |
#       grepl("^03 01 [0-9]", waste_code, perl = TRUE) &
#       !grepl("03 01 04", waste_code, perl = TRUE)
#     )



# suffix <- " (v kilogramih)"
# 
# add_suffix_to_columns <- function(df, columns_to_update, suffix) {
#   
#   # add suffix to the column
#   df <- rename_with(df, ~paste0(., suffix), columns_to_update)
# 
#   return(df)
# }
# 
# # removing unnecessary rows and updating columns names
#   
# oe2021 <- oe2021[-1, , drop = FALSE]
# 
# oe2021 <- add_suffix_to_columns(oe2021, colnames(oe2021)[6:13], suffix)
```

## Collectors

Contains 6 sheets (translated to English):

-   Sheet 1: Pre-storage of waste, 2021

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Statistical region"\
        \[4\] "Waste number"\
        \[5\] "Waste name"\
        \[6\] "Waste grave candles (yes/no)" ?\
        \[7\] "Pre-stored waste on 1.1.2021"\
        \[8\] "Pre-stored waste on 31.12.2021"

-   Sheet 2: Waste collected, 2021

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Statistical region"\
        \[4\] "Waste number"\
        \[5\] "Waste name"\
        \[6\] "Waste grave candles (yes/no)"\
        \[7\] "Waste collected from original producers without record sheet (left behind) (kg)" \[8\] 'Waste collected from original producers with a record sheet (discarded) (kg)'\
        \[9\] "Waste collected from other holders by collectors in the RS (kg)"\
        \[10\] "Waste collected from other holders from treatment operators in RS (kg)"

-   Sheet 3: Municipal waste collected by source of generation, 2021

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Waste number"\
        \[4\] "Waste name"\
        \[5\] "Waste grave candles (yes/no)"\
        \[6\] "Total municipal waste collected"\
        \[7\] "Municipal waste collected by source from households (kg)"\
        \[8\] 'Municipal waste collected by source of generation from activities (kg)'

-   Sheet 4: Municipal waste collected by municipality of origin, 2021

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Waste number"\
        \[4\] "Waste name"\
        \[5\] "Waste grave candles (yes/no)"\
        \[6\] "Municipal waste by municipality of origin (kg)"\
        \[7\] "Municipality code"\
        \[8\] "Name of municipality"

-   Sheet 5: Management of collected waste, 2021

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Statistical region"\
        \[4\] "Waste number"\
        \[5\] "Waste name"\
        \[6\] "Waste grave candles (yes/no)"\
        \[7\] "Waste handed over to collectors in the RS (kg)"\
        \[8\] "Waste delivered to treatment operators in the RS for further management (kg)" \[9\] "Waste sent for further management to other EU Member States (kg)"\
        \[10\] "Waste sent for further management to non-EU countries (kg)"

-   Sheet 6: Household composting, 2021

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Municipality code"\
        \[4\] "Name of municipality"\
        \[5\] "Number of households per municipality"\
        \[6\] "Number of households per municipality that home compost"

```{r collectors}

# collected waste
# skipping header files, fixing column names and removing initial empty rows

# collectors' annual reports (ODP-collection) - poročil zbiralcev odpadkov
# c2021 - collectors'

# Specify the path to the Excel file
waste_collectors_21.path <- "2021 data\\podatki LP ODP-zbiranje 2021.xlsx"

# Get the sheet names
sheet_names <- excel_sheets(waste_collectors_21.path)

# Initialize a list to store processed sheets
processed_sheets <- list()

# Define the sheets where n_max should be 3 (replace with actual sheet indices)
# if needed
sheets_with_n_max_3 <- c(2, 3, 5)

# Loop through each sheet
for (sheet_name in sheet_names) {
  sheet_index <- match(sheet_name, sheet_names)
  n_max <- if (sheet_index %in% sheets_with_n_max_3) 3 else 2
  processed_sheet <- process_sheet(waste_collectors_21.path, sheet_index, n_max)
  processed_sheets[[sheet_name]] <- processed_sheet
}

# Applying the function to each data frame in processed_sheets
processed_sheets <- lapply(processed_sheets, filter_df_by_codes)
```

## Waste Treatment Operators

Contains 9 sheets (translated to English):

-   Sheet 1: Waste storage

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Statistical region"\
        \[4\] "Waste number"\
        \[5\] "Waste name"\
        \[6\] "Waste grave candles (yes/no)"\
        \[7\] "Waste in storage on 1.1.2021 (kg)"\
        \[8\] "Waste in storage on 31.12.2021 (kg)"\
        \[9\] 'Stored on 31.12.2021, scheduled for operation (R,D)'

-   Sheet 2: Waste received

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Statistical region"\
        \[4\] "Waste number"\
        \[5\] "Waste name"\
        \[6\] "Waste tombstone candles (yes/no)"\
        \[7\] "Waste received, own waste (kg)"\
        \[8\] "Waste received, from other original producers in the RS (kg)" \[9\] "Waste collected, from waste collectors in RS (kg)"\
        \[10\] "Waste received from treatment operators in RS (kg)"\
        \[11\] "Waste received from other EU Member States (kg)"\
        \[12\] "Waste received, from non-EU countries (kg)"\
        \[13\] "Waste received, TOTAL (kg)"\
        \[14\] "Treatment operation (R, D)"

-   Sheet 3: Treatment of waste received

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Statistical region"\
        \[4\] "Waste number"\
        \[5\] "Waste name"\
        \[6\] "Waste grave candles (yes/no)"\
        \[7\] 'Waste entering the treatment process (kg)' 'Treatment process (R, D)'

-   Sheet 4: Management of waste from treatment operations and untreated waste

    -   \[1\] "Summer"\
        \[2\] "Report"\
        \[3\] "Statistical region"\
        \[4\] "Waste incoming and waste received untreated number"\
        \[5\] "Waste incoming and accepted untreated waste name"\
        \[6\] "Waste leaving treatment and delivered untreated waste number" \[7\] "Waste exiting treatment and delivered untreated waste name"\
        \[8\] "Waste tombstone candles (yes/no)"\
        \[9\] "Waste delivered to SI waste collector for further management (kg)"\
        \[10\] 'Waste sent for further treatment to a treatment operator in SI (kg)'\
        \[11\] 'Waste sent for further management to other EU Member States (kg)'\
        \[12\] "Waste sent for further management to non-EU countries (kg)"

-   Sheet 4a: Management of treatment products that are no longer waste

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Waste at treatment input number"\
        \[4\] "Waste incoming to treatment name"\
        \[5\] "Waste grave candles (yes/no)"\
        \[6\] 'Treated substance or article that has lost its status as waste at the exit of the treatment process' \[7\] 'Treated substance or article that has lost its status as waste at the exit of the treatment process \[7\] 'Delivered to warehouses or other persons in the RS (kg)'\
        \[8\] "Shipped to other EU Member States (kg)"

-   Sheet 5: Municipal waste received for treatment, separated by municipality of origin

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Waste number"\
        \[4\] "Waste name"\
        \[5\] "Waste grave candles (yes/no)"\
        \[6\] "Waste collected by municipality of origin (kg)"\
        \[7\] "Commune code"\
        \[8\] "Name of municipality"

-   Sheet 6: Mass difference between waste input and treatment product volumes due to mass change during the treatment process

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Waste at treatment input number"\
        \[4\] "Waste at treatment input name"\
        \[5\] "Waste tombstone candles (yes/no)"\
        \[6\] 'Mass reduction or increase during the treatment process (kg)'

-   Sheet 7: Landfill capacity and status (for inert, hazardous and non-hazardous waste, including municipal waste)

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Landfill site"\
        \[4\] "Volume filled in the disposal field at the beginning of the year (in m\^3)"\
        \[5\] "Filled area on the disposal site at the beginning of the year (in m\^2)"\
        \[6\] "Volume of free capacity of the disposal site at the end of the year (in m\^3)" \[7\] "Area of free capacity of the disposal site at the end of the year (in m\^2)" \[8\] "Total disposal capacity (t)"\
        \[9\] "Remaining capacity on 1.1. (in t)"\
        \[10\] 'Remaining capacity on 31.12. (in t)'\
        \[11\] "Date of commencement of disposal"\
        \[12\] "Date of end of disposal"

-   Sheet 8: Landfill waste management

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Waste number"\
        \[4\] "Waste name"\
        \[5\] 'Waste received, all waste (kg)'\
        \[6\] "Waste received, of which waste without waste assessment (kg)"\
        \[7\] 'Landfill waste management, Disposed waste (D1), total (kg)'\
        \[8\] "Landfill waste management, Disposed waste (D1), hazardous waste (kg)"\
        \[9\] 'Landfill waste management, Disposed waste (D1), non-hazardous waste (kg)'\
        \[10\] "Landfill waste management, Disposed waste (D1), Inert waste (kg)"\
        \[11\] "Landfill waste management, Waste for construction of landfill facilities (kg)"\
        \[12\] "Landfill waste management, Waste for landfill cover (kg)"\
        \[13\] "Landfill waste management, Waste rejected (kg)"

-   Sheet 9: Municipal waste disposed by municipality of origin

    -   \[1\] "Year"\
        \[2\] "Report"\
        \[3\] "Waste number"\
        \[4\] "Waste name"\
        \[5\] "Waste disposed of by municipality of origin (kg)" \[6\] "Municipality code"\
        \[7\] "Name of municipality"

```{r waste_treatment_operators}

# how waste is used

# reports of waste treatment operators (ODP-Treatment) - poročil izvajalcev obdelave odpadkov
# wto2021 - waste treatment operators

# Specify the path to the Excel file
treatment_21.path <- "2021 data\\podatki LP ODP-obdelava 2021.xlsx"

# Get the sheet names
sheet_names <- excel_sheets(treatment_21.path)

# Initialize a list to store processed sheets
processed_sheets <- list()

# Define the sheets where n_max should be 3 (replace with actual sheet indices)
# if needed
sheets_with_n_max_3 <- c(2, 4, 5, 7)

sheets_with_n_max_4 <- 9

# Loop through each sheet
for (sheet_name in sheet_names) {
  sheet_index <- match(sheet_name, sheet_names)
  n_max <- if (sheet_index %in% sheets_with_n_max_3) 3 else if (sheet_index == sheets_with_n_max_4) 4 else 2
  processed_sheet <- process_sheet(treatment_21.path, sheet_index, n_max)
  # print(sheet_name)
  # print(n_max)
  processed_sheets[[sheet_name]] <- processed_sheet
}

# Applying the function to each data frame in processed_sheets
processed_sheets <- lapply(processed_sheets, filter_df_by_codes)

obdelava_1.21 <- processed_sheets[[1]]
```

# Year 2020

## Data from the 2020 annual reports of the original emitters

```{r waste_generation}

# Specify the path to the Excel file
waste_generation_20.path <- "2020 data\\podatki LP ODP-nastajanje 2020.xlsx"

# Get the sheet names
sheet_names <- excel_sheets(waste_generation_20.path)

# Initialize a list to store processed sheets
processed_sheets <- list()

# Define the sheets where n_max should be 3 (replace with actual sheet indices)
# if needed
sheets_with_n_max_3 <- c(2, 3, 5)

# Loop through each sheet
for (sheet_name in sheet_names) {
  sheet_index <- match(sheet_name, sheet_names)
  n_max <- if (sheet_index %in% sheets_with_n_max_3) 3 else 2
  processed_sheet <- process_sheet(waste_generation_20.path, sheet_index, n_max)
  processed_sheets[[sheet_name]] <- processed_sheet
}

# Applying the function to each data frame in processed_sheets
processed_sheets <- lapply(processed_sheets, filter_df_by_codes)
```

## Data from 2020 waste collectors' annual reports

```{r waste_collection}

# Specify the path to the Excel file
waste_collection_20.path <- "2020 data\\podatki LP ODP-obdelava 2020.xlsx"

# Get the sheet names
sheet_names <- excel_sheets(waste_collection_20.path)

# Initialize a list to store processed sheets
processed_sheets <- list()

# Define the sheets where n_max should be 3 (replace with actual sheet indices)
sheets_with_n_max_3 <- c(2, 4, 5, 9)

# Loop through each sheet
for (sheet_name in sheet_names) {
  sheet_index <- match(sheet_name, sheet_names)
  n_max <- if (sheet_index %in% sheets_with_n_max_3) 3 else 2
  processed_sheet <- process_sheet(waste_collection_20.path, sheet_index, n_max)
  processed_sheets[[sheet_name]] <- processed_sheet
}

# Applying the function to each data frame in processed_sheets
processed_sheets <- lapply(processed_sheets, filter_df_by_codes)

storing.20 <- processed_sheets[[1]]

```

## Data from annual reports of waste treatment operators

```{r waste_recovery}

# Specify the path to the Excel file
waste_recovery_20.path <- "2020 data\\podatki LP ODP-zbiranje 2020.xlsx"

# Get the sheet names
sheet_names <- excel_sheets(waste_recovery_20.path)

# Initialize a list to store processed sheets
processed_sheets <- list()

# Define the sheets where n_max should be 3 (replace with actual sheet indices)
sheets_with_n_max_3 <- c(2, 3, 5)

# Loop through each sheet
for (sheet_name in sheet_names) {
  sheet_index <- match(sheet_name, sheet_names)
  n_max <- if (sheet_index %in% sheets_with_n_max_3) 3 else 2
  processed_sheet <- process_sheet(waste_recovery_20.path, sheet_index, n_max)
  processed_sheets[[sheet_name]] <- processed_sheet
}

# Applying the function to each data frame in processed_sheets
processed_sheets <- lapply(processed_sheets, filter_df_by_codes)

treatment.20 <- processed_sheets[[1]]

# processed_sheets[[1]]
```

# Year 2019

## Data from the 2019 annual reports of the original emitters

```{r waste_generation}

# Specify the path to the Excel file
waste_generation_19.path <- "2019 data\\podatki LP ODP-nastajanje 2019.xlsx"

# Get the sheet names
sheet_names <- excel_sheets(waste_generation_19.path)

# Initialize a list to store processed sheets
processed_sheets <- list()

# Define the sheets where n_max should be 3 (replace with actual sheet indices)
# if needed
sheets_with_n_max_3 <- c(2, 3, 5)

# Loop through each sheet
for (sheet_name in sheet_names) {
  sheet_index <- match(sheet_name, sheet_names)
  n_max <- if (sheet_index %in% sheets_with_n_max_3) 3 else 2
  processed_sheet <- process_sheet(waste_generation_19.path, sheet_index, n_max)
  processed_sheets[[sheet_name]] <- processed_sheet
}

# Applying the function to each data frame in processed_sheets
processed_sheets <- lapply(processed_sheets, filter_df_by_codes)
```

## Data from the 2019 annual reports on waste collection from manufacturing and service activities

```{r waste_collection}
waste_collection_19.path <- "2019 data\\ODP_Z_2019_objava_21122020.xlsx"

waste_collection_19.sheet1 <- read_excel(waste_collection_19.path, skip = 2, sheet = 1)

waste_collection_19.by_codes1 <- waste_collection_19.sheet1 |>
  rename(waste_code = `ŠT. ODPADKA`) |> 
  filter(
    waste_code %in% codes  |
      grepl("^03 01 [0-9]", waste_code, perl = TRUE) &
      !grepl("03 01 04", waste_code, perl = TRUE)
    )

# change all NA to zero
waste_collection_19.by_codes1[is.na(waste_collection_19.by_codes1)] <- 0
```

## Data from the 2019 annual waste recovery/disposal reports

```{r waste_recovery}
waste_recovery_19.path <- "2019 data\\ODP_P_2019_objava_21122020.xlsx"
```

```{r waste_storage}
# WASTE STORAGE IN 2019

waste_recovery_19.sheet1 <- read_excel(waste_recovery_19.path, skip = 2, sheet = 1)

waste_recovery_19.by_codes1 <- waste_recovery_19.sheet1 |>
  rename(waste_code = `ŠT. ODPADKA`) |> 
  filter(
    waste_code %in% codes  |
      grepl("^03 01 [0-9]", waste_code, perl = TRUE) &
      !grepl("03 01 04", waste_code, perl = TRUE)
    )

# change all NA to zero
waste_recovery_19.by_codes1[is.na(waste_recovery_19.by_codes1)] <- 0
```

```{r waste_collected}
# WASTE COLLECTED IN 2019

waste_recovery_19.sheet2 <- read_excel(waste_recovery_19.path, skip = 2, sheet = 2)

waste_recovery_19.by_codes2 <- waste_recovery_19.sheet2 |>
  rename(waste_code = `ŠT. ODPADKA`) |> 
  filter(
    waste_code %in% codes  |
      grepl("^03 01 [0-9]", waste_code, perl = TRUE) &
      !grepl("03 01 04", waste_code, perl = TRUE)
    )

# change all NA to zero
waste_recovery_19.by_codes2[is.na(waste_recovery_19.by_codes2)] <- 0
```

```{r treatment_waste_received}
# TREATMENT OF WASTE RECEIVED IN 2019

waste_recovery_19.sheet3 <- read_excel(waste_recovery_19.path, skip = 2, sheet = 3)

waste_recovery_19.by_codes3 <- waste_recovery_19.sheet3 |>
  rename(waste_code = `ŠT. ODPADKA`) |> 
  filter(
    waste_code %in% codes  |
      grepl("^03 01 [0-9]", waste_code, perl = TRUE) &
      !grepl("03 01 04", waste_code, perl = TRUE)
    )

# change all NA to zero
waste_recovery_19.by_codes3[is.na(waste_recovery_19.by_codes3)] <- 0
```

```{r treatment_process_waste}
# WASTE GENERATED IN THE TREATMENT PROCESS AND 
# UNTREATED WASTE DELIVERED TO OTHERS IN 2019

waste_recovery_19.sheet4 <- read_excel(waste_recovery_19.path, skip = 2, sheet = 4)

waste_recovery_19.by_codes4 <- waste_recovery_19.sheet4 |>
  rename(waste_code = `ŠT. ODPADKA`) |> 
  filter(
    waste_code %in% codes  |
      grepl("^03 01 [0-9]", waste_code, perl = TRUE) &
      !grepl("03 01 04", waste_code, perl = TRUE)
    )
```

```{r municipal_waste_treatment}
# MUNICIPAL WASTE RECEIVED FOR TREATMENT, 
# SEPARATED BY MUNICIPALITY OF ORIGIN IN 2019

waste_recovery_19.sheet5 <- read_excel(waste_recovery_19.path, skip = 2, sheet = 5)

waste_recovery_19.by_codes5 <- waste_recovery_19.sheet5 |>
  rename(waste_code = `ŠT. ODPADKA`) |> 
  filter(
    waste_code %in% codes  |
      grepl("^03 01 [0-9]", waste_code, perl = TRUE) &
      !grepl("03 01 04", waste_code, perl = TRUE)
    )
```

```{r difference_waste_input_treatment_process}
# THE DIFFERENCE IN MASS BETWEEN THE WASTE INPUT AND 
# THE TREATMENT PRODUCT VOLUMES DUE TO LOSSES DURING 
# THE TREATMENT PROCESS IN 2019

waste_recovery_19.sheet6 <- read_excel(waste_recovery_19.path, skip = 2, sheet = 6)

waste_recovery_19.by_codes6 <- waste_recovery_19.sheet6 |>
  rename(waste_code = `ŠT. ODPADKA`) |> 
  filter(
    waste_code %in% codes  |
      grepl("^03 01 [0-9]", waste_code, perl = TRUE) &
      !grepl("03 01 04", waste_code, perl = TRUE)
    )
```

```{r landfill_capacity}
# LANDFILL CAPACITY AND STATUS IN 2019
waste_recovery_19.sheet7 <- read_excel(waste_recovery_19.path, skip = 2, sheet = 7)

# no codes to filter by
```

```{r waste_volumes_management_landfill}
# TOTAL WASTE VOLUMES AND MANAGEMENT IN LANDFILL IN 2019
waste_recovery_19.sheet8 <- read_excel(waste_recovery_19.path, skip = 2, sheet = 8)

waste_recovery_19.by_codes8 <- waste_recovery_19.sheet8 |>
  rename(waste_code = `ŠT. ODPADKA`) |> 
  filter(
    waste_code %in% codes  |
      grepl("^03 01 [0-9]", waste_code, perl = TRUE) &
      !grepl("03 01 04", waste_code, perl = TRUE)
    )
```

```{r municipal_waste_disposed}
# MUNICIPAL WASTE DISPOSED OF BY MUNICIPALITY IN 2019
waste_recovery_19.sheet9 <- read_excel(waste_recovery_19.path, skip = 2, sheet = 9)

# no code to filter by for wood
```

# Year 2018

## Data from the 2018 annual reports received on waste generation in manufacturing and service activities

```{r waste_generation}
waste_generation_18.path <- "2018 data\\ODP_2018_objava21122020.xlsx"
```

```{r TABLE_1_WASTE_GENERATED}
# TYPE, QUANTITY AND TREATMENT OF WASTE 
# FROM MANUFACTURING AND SERVICE ACTIVITIES FOR 2018

data18.sheet1 <- read_excel(waste_generation_18.path, skip = 2, sheet = 1)

filtered_by_codes.sheet1 <- data18.sheet1 |> 
  filter(`ŠT. ODPADKA` %in% codes  | grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) & !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE))

filtered_by_codes.sheet1 <- filtered_by_codes.sheet1 |> 
  rename(Region = `ST. REGIJA                                           (1-POMURSKA,  2-PODRAVSKA,                                3-KOROŠKA,  4-SAVINJSKA,  5-ZASAVSKA,        6 -POSAVSKA,  7-JUGOVZHODNA SLOVENIJA,  8-OSREDNJESLOVENSKA, 9-GORENJSKA,      10-PRIMORSKO-NOTRANJSKA,  11-GORIŠKA,  12-OBALNO-KRAŠKA)`)

# Create a bar chart
filtered_by_codes.sheet1 |> 
  ggplot(aes(x = factor(Region), fill = factor(Region))) +
  geom_bar() +
  labs(title = "WASTE GENERATED by Region", x = "Region", y = "Count") +
  scale_x_discrete(labels = c("0" = "Not Defined", "1" = "POMURSKA", "2" = "PODRAVSKA", "3" = "KOROŠKA", "4" = "SAVINJSKA", "5" = "ZASAVSKA", "6" = "POSAVSKA", "7" = "JUGOVZHODNA SLOVENIJA", "8" = "OSREDNJESLOVENSKA", "9" = "GORENJSKA", "10" = "PRIMORSKO-NOTRANJSKA", "11" = "GORIŠKA", "12" = "OBALNO-KRAŠKA"))

waste_per_company.sheet1 <- filtered_by_codes.sheet1 |> 
  group_by(NAZIV, `ŠT. ODPADKA`) |> 
  summarise(Count = n(),
            .groups = "drop_last")

# Create a pie chart
waste_per_company.sheet1 |> 
  ggplot(aes(x = "", y = Count, fill = `ŠT. ODPADKA`)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) +  # Convert to a pie chart
  labs(title = "Waste Type Proportion per Company", fill = "Waste Type") +
  theme_void()  # Remove unnecessary elements
```

```{r TABLE_2_WASTE_MANAGEMENT}

data18.sheet2 <- read_excel(waste_generation_18.path, skip = 2, sheet = 2)

filtered_by_codes.sheet2 <- data18.sheet2 |> 
  filter(`ŠT. ODPADKA` %in% codes  | grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) & !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE))

filtered_by_codes.sheet2 <- filtered_by_codes.sheet2 |> 
  rename(Region = `ST. REGIJA                                           (1-POMURSKA,  2-PODRAVSKA,                                3-KOROŠKA,  4-SAVINJSKA,  5-ZASAVSKA,                6 -POSAVSKA,  7-JUGOVZHODNA SLOVENIJA,  8-OSREDNJESLOVENSKA, 9-GORENJSKA,         10-PRIMORSKO-NOTRANJSKA,  11-GORIŠKA,  12-OBALNO-KRAŠKA)`)

waste_manag_company.sheet2 <- filtered_by_codes.sheet2 |> 
  group_by(`NAZIV`, `ŠT. ODPADKA`) |> 
  summarise(Count = n(),
            .groups = "drop_last")

waste_manag_company.sheet2 |> 
  group_by(`ŠT. ODPADKA`) |> 
  summarise(Count = n())

filtered_by_codes.sheet2 |> 
  ggplot(aes(x = factor(Region), fill = factor(Region))) +
  geom_bar() +
  labs(title = "WASTE MANAGEMENT by Region", x = "Region", y = "Count") +
  scale_x_discrete(labels = c("0" = "Not Defined", "1" = "POMURSKA", "2" = "PODRAVSKA", "3" = "KOROŠKA", "4" = "SAVINJSKA", "5" = "ZASAVSKA", "6" = "POSAVSKA", "7" = "JUGOVZHODNA", "8" = "OSREDNJESLOVENSKA", "9" = "GORENJSKA", "10" = "PRIMORSKO-NOTRANJSKA", "11" = "GORIŠKA", "12" = "OBALNO-KRAŠKA"))



#colnames(filtered)
#max(filtered[,6], na.rm = T)

# per region, per company
# number of companies
# type of waste per companies, how many different types
# node = a company in a region, point on a map
# cant just focus on headquarters (HQ) of the node
# try to figure out connection between operator, collector and storage


# descriptive statisc for all
```

## Data from the 2018 annual reports received on waste collection from manufacturing and service activities

```{r waste_collection}
waste_collection_18.path <- "2018 data\\ODP_Z_2018_objava21122020.xlsx"

# c("1" = "POMURSKA", 
#   "2" = "PODRAVSKA",
#   "3" = "KOROŠKA", 
#   "4" = "SAVINJSKA",
#   "5" = "ZASAVSKA", 
#   "6" = "POSAVSKA", 
#   "7" = "JUGOVZHODNA",
#   "8" = "OSREDNJESLOVENSKA",
#   "9" = "GORENJSKA",
#   "10" = "PRIMORSKO-NOTRANJSKA",
#   "11" = "GORIŠKA", 
#   "12" = "OBALNO-KRAŠKA")
```

```{r waste_storage}
waste_collection_18.sheet1 <- read_excel(waste_collection_18.path, skip = 2, sheet = 1)

waste_collection_18.by_codes1 <- waste_collection_18.sheet1 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )

# Create a bar chart
waste_collection_18.by_codes1 |> 
  ggplot(aes(x = factor(`STATISTIČNA REGIJA`), fill = factor(`STATISTIČNA REGIJA`))) +
  geom_bar() +
  labs(title = "WASTE STORAGE by Region", x = "Region", y = "Count")
```

```{r waste_collected}
waste_collection_18.sheet2 <- read_excel(waste_collection_18.path, skip = 2, sheet = 2)

waste_collection_18.by_codes2 <- waste_collection_18.sheet2 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )

# Create a bar chart
waste_collection_18.by_codes2 |> 
  ggplot(aes(x = factor(`STATISTIČNA REGIJA`), fill = factor(`STATISTIČNA REGIJA`))) +
  geom_bar() +
  labs(title = "WASTE COLLECTED by Region", x = "Region", y = "Count")
```

```{r municipal_waste_collected}
waste_collection_18.sheet3 <- read_excel(waste_collection_18.path, skip = 2, sheet = 3)

waste_collection_18.by_codes3 <- waste_collection_18.sheet3 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )

waste_collection_18.by_codes3 <- waste_collection_18.by_codes3 |> 
  group_by(`NAZIV IN NASLOV`, `ŠT. ODPADKA`) |> 
  summarise(Count = n())

codes_occurrence <- waste_collection_18.by_codes3 |>
  group_by(`ŠT. ODPADKA`) |>
  summarise(Count = n())

codes_occurrence[1, 2]
codes_occurrence[2, 2]
codes_occurrence[3, 2]

codes_occurrence |> 
  ggplot(aes(x = "", y = Count, fill = `ŠT. ODPADKA`, label = Count)) +
  geom_bar(stat = "identity", width = 1) +
  geom_text(position = position_stack(vjust = 0.5), color = "white", size = 5) +  # Add text labels
  coord_polar("y", start = 0) +  # Convert to a pie chart
  labs(title = "Number of Companies per Waste Type", fill = "Waste Type") +
  theme_void()  # Remove unnecessary elements
```

```{r municipal_waste_collected_separated_by_mncplt_org}
waste_collection_18.sheet4 <- read_excel(waste_collection_18.path, skip = 2, sheet = 4)

waste_collection_18.by_codes4 <- waste_collection_18.sheet4 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )

waste_collection_18.by_codes4 <- waste_collection_18.by_codes4 |> 
  group_by(`NAZIV OBČINE`, `ŠT. ODPADKA`) |> 
  summarise(Count = n())

codes_occurrence.by_codes4 <- waste_collection_18.by_codes4 |> 
  group_by(`ŠT. ODPADKA`) |> 
  summarise(Count = n())

codes_occurrence.by_codes4 |> 
  ggplot(aes(x = "", y = Count, fill = `ŠT. ODPADKA`, label = Count)) +
  geom_bar(stat = "identity", width = 1) +
  geom_text(position = position_stack(vjust = 0.5), color = "white", size = 5) +  # Add text labels
  coord_polar("y", start = 0) +  # Convert to a pie chart
  labs(title = "Number of Municipalities per Waste Type", fill = "Waste Type") +
  theme_void()  # Remove unnecessary elements
```

```{r management_waste_collected}
waste_collection_18.sheet5 <- read_excel(waste_collection_18.path, skip = 2, sheet = 5)

waste_collection_18.by_codes5 <- waste_collection_18.sheet5 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )

waste_collection_18.by_codes5 <- waste_collection_18.by_codes5 |> 
  group_by(`STATISTIČNA REGIJA`, `ŠT. ODPADKA`) |> 
  summarise(Count = n())

# # Create a bar chart
# waste_collection_18.by_codes5 |> 
#   ggplot(aes(x = `STATISTIČNA REGIJA`, fill = factor(Count))) +
#   geom_bar() +
#   labs(title = "MANAGEMENT WASTE STORAGE by Region", x = "Region", y = "Count")

waste_collection_18.by_codes5 |> 
  ggplot(aes(x = `STATISTIČNA REGIJA`, y = Count, fill = factor(`ŠT. ODPADKA`))) +
  geom_tile() +
  labs(title = "MANAGEMENT WASTE STORAGE by Region", x = "Region", y = NULL) +
  theme_minimal()  # Adjust the theme as needed

codes_occurrence.by_codes5 <- waste_collection_18.by_codes5 |>
  group_by(`ŠT. ODPADKA`) |>
  summarise(Count = n())

codes_occurrence.by_codes5 |> 
  ggplot(aes(x = "", y = Count, fill = `ŠT. ODPADKA`, label = Count)) +
  geom_bar(stat = "identity", width = 1) +
  geom_text(position = position_stack(vjust = 0.5), color = "white", size = 5) +  # Add text labels
  coord_polar("y", start = 0) +  # Convert to a pie chart
  labs(title = "Number of Regions per Waste Type", fill = "Waste Type") +
  theme_void()  # Remove unnecessary elements
```

## Data from the 2018 annual waste recovery/disposal reports received

```{r waste_recovery_disposal}
waste_recovery_18.path <- "2018 data\\ODP_P_2018_objava21122020.xlsx"
```

```{r waste_recovery_disposal_storage}
waste_recovery_18.sheet1 <- read_excel(waste_recovery_18.path, skip = 2, sheet = 1)

waste_recovery_18.by_codes1 <- waste_recovery_18.sheet1 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )
```

```{r waste_recovery/disposal_collected}
waste_recovery_18.sheet2 <- read_excel(waste_recovery_18.path, skip = 2, sheet = 2)

waste_recovery_18.by_codes2 <- waste_recovery_18.sheet2 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )
```

```{r treatment_of_waste}
waste_recovery_18.sheet3 <- read_excel(waste_recovery_18.path, skip = 2, sheet = 3)

waste_recovery_18.by_codes3 <- waste_recovery_18.sheet3 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )
```

```{r waste_generated}
# WASTE GENERATED IN THE TREATMENT PROCESS AND 
# UNTREATED WASTE DELIVERED TO OTHERS IN 2018
waste_recovery_18.sheet4 <- read_excel(waste_recovery_18.path, skip = 2, sheet = 4)

waste_recovery_18.by_codes4 <- waste_recovery_18.sheet4 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )
```

```{r municipal_waste_received}
# MUNICIPAL WASTE RECEIVED FOR TREATMENT, 
# SEPARATED BY MUNICIPALITY OF ORIGIN IN 2018
waste_recovery_18.sheet5 <- read_excel(waste_recovery_18.path, skip = 2, sheet = 5)

waste_recovery_18.by_codes5 <- waste_recovery_18.sheet5 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )
```

```{r difference_waste_input_treatment_process}
# MASS DIFFERENCE BETWEEN WASTE INPUT AND 
# TREATMENT PRODUCT VOLUMES DUE TO LOSSES 
# DURING THE TREATMENT PROCESS IN 2018

waste_recovery_18.sheet6 <- read_excel(waste_recovery_18.path, skip = 2, sheet = 6)

waste_recovery_18.by_codes6 <- waste_recovery_18.sheet6 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )
```

```{r landfill_capacity}
# LANDFILL CAPACITY AND STATUS IN 2018

waste_recovery_18.sheet7 <- read_excel(waste_recovery_18.path, skip = 2, sheet = 7)

# cannot filter by codes
# should try by company names? 
```

```{r landfill_quantities_management}
# TOTAL QUANTITIES AND MANAGEMENT OF WASTE IN LANDFILL IN 2018

waste_recovery_18.sheet8 <- read_excel(waste_recovery_18.path, skip = 2, sheet = 8)

waste_recovery_18.by_codes8 <- waste_recovery_18.sheet8 |> 
  filter(
    `ŠT. ODPADKA` %in% codes  |
      grepl("^03 01 [0-9]", `ŠT. ODPADKA`, perl = TRUE) &
      !grepl("03 01 04", `ŠT. ODPADKA`, perl = TRUE)
    )
```

```{r municipal_waste_disposed}
# MUNICIPAL WASTE DISPOSED BY MUNICIPALITY IN 2018

waste_recovery_18.sheet9 <- read_excel(waste_recovery_18.path, skip = 2, sheet = 9)

# no code to filter by for wood
```

# Year 2017

# Year 2016
